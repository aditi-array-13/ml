!pip install pandas numpy scikit-learn

# Import necessary libraries
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
from sklearn.preprocessing import LabelEncoder

# Load the dataset
dataset = 'C:/Users/Aditi/Documents/sem 7/Machine Learning/codes/car_evaluation.csv'
df = pd.read_csv(dataset)

# Display the first few rows of the dataset
print("Dataset Overview:")
print(df.head())

print(df.columns)

# Check for missing values
print("\nChecking for missing values:")
print(df.isnull().sum())

# Data preprocessing - Convert categorical features to numerical using LabelEncoder
le = LabelEncoder()
for column in df.columns:
    df[column] = le.fit_transform(df[column])


# Splitting the dataset into features (X) and target (y)
X = df.drop('unacc', axis=1)
y = df['unacc']


# Split the data into training and test sets (80% training and 20% testing)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize the Random Forest Classifier
rfc = RandomForestClassifier(n_estimators=100, random_state=42)

# Train the model
rfc.fit(X_train, y_train)

# Make predictions on the test data
y_pred = rfc.predict(X_test)

# Evaluate the model
print("\nAccuracy of the Random Forest Classifier:")
print(accuracy_score(y_test, y_pred))

print("\nClassification Report:")
print(classification_report(y_test, y_pred))

print("\nConfusion Matrix:")
print(confusion_matrix(y_test, y_pred))